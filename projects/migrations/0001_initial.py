# Generated by Django 3.2.4 on 2021-12-01 17:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_functions', '0006_alter_person_email'),
        ('scopes', '0007_alter_speciescommunity_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConMeas2Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Goal2Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location2Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MethodTitle', models.CharField(max_length=255)),
                ('MethodCode', models.CharField(max_length=10)),
                ('MethodType', models.CharField(max_length=50)),
                ('MethodDate', models.DateField()),
                ('MethodVersion', models.CharField(max_length=10)),
                ('MethodDescription', models.TextField()),
                ('MethodContact', models.CharField(max_length=38)),
            ],
        ),
        migrations.CreateModel(
            name='Method2Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MilestoneProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReportingDate', models.DateField()),
                ('Status', models.CharField(max_length=25)),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ObjCode', models.CharField(max_length=25)),
                ('ObjName', models.CharField(max_length=100)),
                ('ObjDescription', models.TextField()),
                ('ObjStartDate', models.DateField()),
                ('ObjEndDate', models.DateField()),
                ('ObjFlowDiagram', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Objective2Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OutputType', models.CharField(max_length=100)),
                ('OutputAuthors', models.CharField(max_length=255)),
                ('OutputDate', models.DateField()),
                ('OutputTitle', models.TextField()),
                ('OutputVersion', models.CharField(max_length=10)),
                ('OutputDescription', models.TextField()),
                ('OutputDOI', models.CharField(max_length=100)),
                ('OutputCitation', models.TextField()),
                ('OutputURI', models.CharField(max_length=255)),
                ('OutputConstraints', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorktaskID', models.CharField(max_length=10)),
                ('ProjectName', models.CharField(max_length=255)),
                ('ProjectLead', models.CharField(max_length=38)),
                ('ProjectStatus', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=10)),
                ('ProjectType', models.CharField(choices=[('Fish Augmentation', 'Fish Augmentation'), ('Species Research', 'Species Research'), ('System Monitoring', 'System Monitoring'), ('Conservation Area Development and Management', 'Fish Augmentation'), ('Post-Development Monitoring', 'Post-Development Monitoring'), ('Adaptive Management Program', 'Adaptive Management Program')], max_length=50)),
                ('ProjectStart', models.DateField()),
                ('ProjectEnd', models.DateField()),
                ('ProjectSummary', models.TextField()),
                ('ProjectBackground', models.TextField()),
                ('OtherConsMeas', models.CharField(max_length=255)),
                ('OtherSpecies', models.CharField(max_length=255)),
                ('ConMeas', models.ManyToManyField(through='projects.ConMeas2Project', to='scopes.ConservationMeasure')),
                ('Goals', models.ManyToManyField(through='projects.Goal2Project', to='scopes.Goal')),
                ('Locations', models.ManyToManyField(through='projects.Location2Project', to='scopes.Location')),
                ('Objectives', models.ManyToManyField(to='projects.Objective')),
                ('Outputs', models.ManyToManyField(to='projects.Output')),
                ('People', models.ManyToManyField(to='user_functions.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProtocolTitle', models.CharField(max_length=255)),
                ('ProtocolVerision', models.CharField(max_length=10)),
                ('ProtocolDate', models.DateField()),
                ('ProtocolAuthor', models.CharField(max_length=255)),
                ('ProtocolDescription', models.TextField()),
                ('ProtocolLink', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StepName', models.CharField(max_length=100)),
                ('StepCode', models.CharField(max_length=10)),
                ('StepType', models.CharField(max_length=100)),
                ('StepSummary', models.TextField()),
                ('StepStartDate', models.DateField()),
                ('StepEndDate', models.DateField()),
                ('StepDependencies', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TriggerName', models.CharField(max_length=38)),
                ('TriggerDescription', models.TextField()),
                ('TriggerIndicators', models.TextField()),
                ('ProposedResponse', models.TextField()),
                ('ProjectID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='TriggerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReportingDate', models.DateField()),
                ('StatusTrend', models.TextField()),
                ('MgmtInterp', models.TextField()),
                ('MgmtResponse', models.TextField()),
                ('TriggerID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.trigger')),
            ],
        ),
        migrations.AddField(
            model_name='trigger',
            name='TriggerStatus',
            field=models.ManyToManyField(to='projects.TriggerStatus'),
        ),
        migrations.CreateModel(
            name='Step2Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MethodID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.method')),
                ('StepID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.step')),
            ],
        ),
        migrations.AddField(
            model_name='step',
            name='Methods',
            field=models.ManyToManyField(through='projects.Step2Method', to='projects.Method'),
        ),
        migrations.CreateModel(
            name='SpeCom2Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjectID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('SpeComID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scopes.speciescommunity')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorktaskID', models.CharField(max_length=10)),
                ('RelationshipType', models.CharField(max_length=100)),
                ('Project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='Project2Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OutputID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.output')),
                ('ProjectID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
    ]
